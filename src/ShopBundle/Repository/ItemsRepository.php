<?php

namespace ShopBundle\Repository;

/**
 * ItemsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ItemsRepository extends \Doctrine\ORM\EntityRepository
{
    public function Group1() {
        $qb = $this->createQueryBuilder('i')
            ->select('distinct(i.itemgroup1) as itemgroup')
            ->where('i.itemgroup1 IS NOT NULL')
            ->andWhere("i.itemgroup1 <> ''")
        ;
        return $qb->getQuery()->getResult();
    }

    public function Group2() {
        $qb = $this->createQueryBuilder('i')
            ->select('distinct(i.itemgroup2) as itemgroup')
            ->addSelect('i.itemgroup1 as parent')
            ->where('i.itemgroup2 IS NOT NULL')
            ->andWhere("i.itemgroup2 <> ''")
        ;
        return $qb->getQuery()->getResult();
    }

    public function Group3() {
        $qb = $this->createQueryBuilder('i')
            ->select('distinct(i.itemgroup3) as itemgroup')
            ->addSelect('i.itemgroup2 as parent')
            ->where('i.itemgroup3 IS NOT NULL')
            ->andWhere("i.itemgroup3 <> ''")
        ;
        return $qb->getQuery()->getResult();
    }

    public function Group4() {
        $qb = $this->createQueryBuilder('i')
            ->select('distinct(i.itemgroup4) as itemgroup')
            ->addSelect('i.itemgroup3 as parent')
            ->where('i.itemgroup4 IS NOT NULL')
            ->andWhere("i.itemgroup4 <> ''")
        ;
        return $qb->getQuery()->getResult();
    }

    public function Group5() {
        $qb = $this->createQueryBuilder('i')
            ->select('distinct(i.itemgroup5) as itemgroup')
            ->addSelect('i.itemgroup4 as parent')
            ->where('i.itemgroup5 IS NOT NULL')
            ->andWhere("i.itemgroup5 <> ''")
        ;
        return $qb->getQuery()->getResult();
    }

    public function getAllItems($companyno) {
        $qb = $this->createQueryBuilder('i')
            ->select('i.id as id')
            ->addSelect('i.text1 as text1')
            ->addSelect('i.text2 as text2')
            ->addSelect('i.itemno as itemno')
            ->addSelect('i.photo')
            ->addSelect('i.itemgroup1')
            ->orderBy('i.itemno', 'DESC')
        ;
        return $qb->getQuery()->getResult();
    }

    public function getByCategory($category) {

        $qb = $this->createQueryBuilder('i')
            ->select('i.id as id')
            ->addSelect('i.text1 as text1')
            ->addSelect('i.text2 as text2')
            ->addSelect('i.itemno as itemno')

            ->where('i.itemgroup1 = :category')
            ->setParameter('category',$category)
        ;
        return $qb->getQuery()->getResult();
    }

    public function getBySubCategory($parent, $cat2) {
        $qb = $this->createQueryBuilder('i')
            ->select('i.id as id')
            ->addSelect('i.text1 as text1')
            ->addSelect('i.text2 as text2')
            ->addSelect('i.itemno as itemno')

            ->where('i.itemgroup1 = :parent')
            ->andWhere('i.itemgroup2 = :category')
            ->setParameter('category',$cat2)
            ->setParameter('parent',$parent)
        ;
        return $qb->getQuery()->getResult();
    }

    public function getBySubSubCategory($grandparent, $parent, $cat2) {
        $qb = $this->createQueryBuilder('i')
            ->select('i.id as id')
            ->addSelect('i.text1 as text1')
            ->addSelect('i.text2 as text2')
            ->addSelect('i.itemno as itemno')

            ->where('i.itemgroup1 = :grandparent')
            ->andWhere('i.itemgroup2 = :parent')
            ->andWhere('i.itemgroup3 = :category')
            ->setParameter('category',$cat2)
            ->setParameter('parent',$parent)
            ->setParameter('grandparent',$grandparent)
        ;
        return $qb->getQuery()->getResult();
    }

    public function getOneItem($id) {
        $qb = $this->createQueryBuilder('i')
            ->select('i.photo', 'p')
            ->addSelect('i.text1')
            ->addSelect('i.text2')
            ->addSelect('i.id')
            ->addSelect('i.itemno')
            ->join('i.pictures', 'p', 'p.item = i')
            ->addSelect('i.ean')
            ->leftJoin('i.itemdescription', 'it')
            ->addSelect('it.text')
            ->where('i.id = :id')
            ->setParameter('id', $id)
        ;

        return $qb->getQuery()->getResult();
    }
}
